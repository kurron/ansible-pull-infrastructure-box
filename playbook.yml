#!/usr/bin/env ansible-playbook

- name: Gather prerequisites
  hosts: all
  gather_facts: True
  tasks:
    - name: create groups based on distribution
      group_by: key={{ ansible_distribution }}

- name: Install Debugging Tools
  hosts: Ubuntu
  become: True
  tasks:
      - hostname: name=helheim
      - pip: name=httpie
#     - apt: name=mysql-client-5.6 state=present update_cache=true cache_valid_time=3600 install_recommends=true

- name: Install Sysdig
  hosts: Ubuntu
  become: True
  tasks:
      - apt_key: url=https://s3.amazonaws.com/download.draios.com/DRAIOS-GPG-KEY.public state=present
      - apt_repository: repo='deb http://download.draios.com/stable/deb stable-$(ARCH)/' state=present
      - shell: apt-get -y install linux-headers-$(uname -r)
      - apt: name=sysdig state=latest update_cache=true

- name: Install Docker
  hosts: Ubuntu
  become: True
  tasks:
    - apt: name=curl state=latest update_cache=true cache_valid_time=600
    - command: /usr/bin/curl --location --output /root/install-docker https://get.docker.com/
    - file: path=/root/install-docker owner=root group=root mode=0500
    - shell: /root/install-docker
    - file: path=/etc/systemd/system/docker.service.d state=directory mode=0755
    - copy: src=files/root-dir.conf dest=/etc/systemd/system/docker.service.d/root-dir.conf owner=root group=root mode=444 backup=no
    - command: usermod -aG docker vagrant
    - command: systemctl daemon-reload
    - command: systemctl restart docker
    - command: docker run hello-world

    - shell: /usr/bin/curl --location --output /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/1.8.1/docker-compose-`uname -s`-`uname -m`
    - file: path=/usr/local/bin/docker-compose owner=root group=root mode=0555
    - command: docker-compose --version

    - get_url: url=https://github.com/docker/machine/releases/download/v0.8.2/docker-machine-Linux-x86_64 dest=/usr/local/bin/docker-machine mode=0555
    - command: docker-machine --version

- name: Pull Down Docker Containers
  hosts: nobody
  become: False
  tasks:
      - docker_image:
            name: "redis"
            tag: "latest"
      - docker_image:
            name: "mongo"
            tag: "latest"
      - docker_image:
            name: "mysql"
            tag: "latest"
      - docker_image:
            name: "elasticsearch"
            tag: "latest"
      - docker_image:
            name: "postgres"
            tag: "latest"
      - docker_image:
            name: "logstash"
            tag: "latest"
      - docker_image:
            name: "kibana"
            tag: "latest"
      - docker_image:
            name: "rabbitmq"
            tag: "management"
      - docker_image:
            name: "haproxy"
            tag: "latest"
      - docker_image:
            name: "consul"
            tag: "latest"
      - docker_image:
            name: "neo4j"
            tag: "latest"
      - docker_image:
            name: "mongo-express"
            tag: "latest"
      - docker_image:
            name: "vault"
            tag: "latest"
      - docker_image:
            name: "busybox"
            tag: "latest"

- name: Start Docker Containers
  hosts: Ubuntu
  become: False
  vars:
       rabbitmq_user: "guest"
       rabbitmq_password: "guest"
       rabbitmq_vhost: "/"

  tasks:
      - docker_container:
            name: "redis-data"
            image: "busybox:latest"
            network_mode: "none"
            pull: True
            volumes:
            - /data
      - docker_container:
            detach: True
            image: "redis:latest"
            name: "redis"
            network_mode: "host"
            pull: True
            restart_policy: "always"
            state: "started"
            trust_image_content: True
            volumes_from:
            - redis-data


      - docker_container:
            name: "mongodb-data"
            image: "busybox:latest"
            network_mode: "none"
            pull: True
            volumes:
            - /data/db
      - docker_container:
            detach: True
            image: "mongo:latest"
            name: "mongodb"
            network_mode: "host"
            pull: True
            restart_policy: "always"
            state: "started"
            trust_image_content: True
            volumes_from:
            - mongodb-data
            command: mongod --storageEngine=wiredTiger --wiredTigerCacheSizeGB=1 --notablescan --journalCommitInterval=300 --directoryperdb

      - docker_container:
            name: "rabbitmq-data"
            image: "busybox:latest"
            network_mode: "none"
            pull: True
            volumes:
            - /var/lib/rabbitmq
      - docker_container:
            detach: True
            image: "rabbitmq:management"
            name: "rabbitmq"
            network_mode: "host"
            pull: True
            restart_policy: "always"
            state: "started"
            trust_image_content: True
            volumes_from:
            - rabbitmq-data
            # limit RabbitMQ's RAM or it will steal 40% of available memory
            memory: "1GB"
            env:
                RABBITMQ_DEFAULT_USER: "guest"
                RABBITMQ_DEFAULT_PASS: "guest"
                RABBITMQ_DEFAULT_VHOST: "/"

      - docker_container:
            name: "mysql-data"
            image: "busybox:latest"
            network_mode: "none"
            pull: True
            volumes:
            - /var/lib/mysql
            - /etc/mysql/conf.d
      - docker_container:
            detach: True
            image: "mysql:latest"
            name: "mysql"
            network_mode: "host"
            pull: True
            restart_policy: "always"
            state: "started"
            trust_image_content: True
            volumes_from:
            - mysql-data
            env:
                MYSQL_ROOT_PASSWORD: "sa"
                MYSQL_USER: "mysql"
                MYSQL_PASSWORD: "mysql"
                MYSQL_DATABASE: "kurron"

      - docker_container:
            name: "consul-data"
            image: "busybox:latest"
            network_mode: "none"
            pull: True
            volumes:
            - /consul/data
            - /consul/config
      - docker_container:
            detach: True
            image: "consul:latest"
            name: "consul"
            network_mode: "host"
            pull: True
            restart_policy: "always"
            state: "started"
            trust_image_content: True
            volumes_from:
            - consul-data
            env:
                CONSUL_CLIENT_INTERFACE: "enp0s8"
                CONSUL_BIND_INTERFACE: "enp0s8"
            command: consul agent -server -bootstrap-expect=1 -dc=nine-realms -ui

